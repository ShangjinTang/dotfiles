######################################################################

_INCLUDE ~/.zshrc.pre

######################################################################
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#---------------------------------------------------------------------

# enable ohmyzsh auto update
zstyle ':omz:update' mode auto

# replace 'compinit' with 'zsh-completions'
# Reference: https://github.com/zsh-users/zsh-completions/issues/603#issuecomment-967116106
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src
fpath+=~/.zsh_completions

# completion for zsh
# To fix warning: "zsh compinit: insecure directories", enter command `compaudit | xargs chmod g-w`
# autoload -Uz compinit && compinit

# ohmyzsh settings
export ZSH=$HOME/.oh-my-zsh
# ZSH_CUSTOM=$HOME/.oh-my-zsh/custom
ZSH_THEME="powerlevel10k/powerlevel10k"  # ZSH_THEME="robbyrussell"

plugins=(
    # ohmyzsh built-in executable
    # extract                     ## extract archive including tar,7z,gz,bz2,xz,zip ... [Replaced by https://github.com/ouch-org/ouch]
    copybuffer                  ## shortcut: Ctrl-o: copy current input in CLI to system clipboard
    copyfile                    ## copyfile FILE: copy content of FILE to system clipboard
    copypath                    ## copy current path (absolute path) to system clipboard
    wd                          ## warp point
    # z                           ## z jump [Replaced by https://github.com/ajeetdsouza/zoxide]
    git-auto-fetch              ## auto fetch changes from remote with interval $GIT_AUTO_FETCH_INTERVAL, default (sec) = 60)
    # ohmyzsh built-in non-executable
    direnv                      ## creates hook for 'direnv'
    colored-man-pages           ## add colors for 'man' command
    command-not-found           ## prompt suggested packages if cli command not found
    fancy-ctrl-z                ## use Ctrl-z to switch between terminal and vim/nvim
    # ohmyzsh built-in completions
    bazel
    gh
    rust

    # manual install (not built-in in ohmyzsh)
    # zsh-abbr                    ## command abbreviation
    fzf-tab                     ## zsh fzf tab completion
    zsh-autosuggestions         ## command history hint
    # Note: zsh-syntax-highlighting must be the last plugin sourced
    zsh-syntax-highlighting     ## command highlight

    # macOS only
    # dash                        ## open dash application
    # forklift                    ## open with forklift: fl [<file_or_folder>]
)

######################################################################

# fzf-tab
# bindings
zstyle ':fzf-tab:*' fzf-bindings 'ctrl-a:toggle-all' 'ctrl-s:toggle-out'
# disable sorts
zstyle ':completion:complete:*:options' sort false
zstyle ':completion:*:git-checkout:*' sort false
# search not only keyword, but also strings
zstyle ':fzf-tab:complete:*:*' query-string input
# trigger a continuous completion
zstyle ':fzf-tab:*' continuous-trigger '/'
# use the currently entered user input as the final completion output
zstyle ':fzf-tab:*' print-query alt-enter

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes
# switch group using `<` and `>`
# zstyle ':fzf-tab:*' switch-group '<' '>'
zstyle ':fzf-tab:*' switch-group 'LEFT' 'RIGHT'
# change color
zstyle ':fzf-tab:*' fzf-flags '--color=hl:#ea76cb'
#---------------------------------------------------------------------

source $ZSH/oh-my-zsh.sh
unset LSCOLORS # zstyle ':completion:*:default' list-colors ${(s.:.)LSCOLORS}

#---------------------------------------------------------------------

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
_INCLUDE ~/.p10k.zsh ~/.p10k.mise.zsh

######################################################################

_INCLUDE ~/.fzf.zsh

######################################################################

_INCLUDE ~/.zshrc.wsl

######################################################################

# Add private configurations in ~/.zshrc.private
_INCLUDE ~/.zshrc.private

######################################################################

_INCLUDE ~/.zshrc.post

######################################################################

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/sol/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/sol/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/home/sol/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/home/sol/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/home/sol/miniforge3/etc/profile.d/mamba.sh" ]; then
    . "/home/sol/miniforge3/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

